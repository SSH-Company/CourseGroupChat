{"version":3,"sources":["home/Index.tsx","BaseUrl.tsx","home/VerifyAccount.tsx","home/ResetPassword.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HomePage","className","style","textAlign","color","marginRight","size","BASE_URL","VerifyAccount","props","useParams","useState","status","setStatus","message","setMessage","showResend","setShowResend","useEffect","userId","length","token","axios","get","params","then","res","data","catch","err","console","error","onClick","post","email","ResetPassword","labelCol","span","wrapperCol","name","onFinish","values","password","retypePassword","notification","open","description","type","Item","label","rules","required","Password","offset","htmlType","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64efff1d.chunk.js","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { Button } from 'antd';\nimport './index.scss';\nimport 'antd/dist/antd.css';\n\nconst HomePage:FunctionComponent = () => {\n    return (\n        <div className=\"header-background screen-center\" >\n            <div className=\"jumbotron\">\n                <div className=\"col-md-18\" style={{ textAlign: 'center', color: 'black' }}>\n                    <h1 className=\"display-4\">Cirkle!</h1>\n                    <p className=\"lead\">Our Community</p>\n                    <p className=\"lead\">\n                        <Button style={{ marginRight: 10 }} size=\"large\">App Store</Button>\n                        <Button size=\"large\">Play Store</Button>\n                    </p>\n                </div>\n            </div>\n        </div>\n    )\n} \n\nexport default HomePage\n\n\n","export const BASE_URL = 'http://3.97.116.200:3001'\n// export const BASE_URL = 'http://192.168.0.123:3001'\nexport const EMPTY_IMAGE_DIRECTORY = `https://konnect-bucket-dev-env-1.s3.ca-central-1.amazonaws.com/empty_profile_pic.jpg`;\n\n","import React, { FunctionComponent, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { BASE_URL } from '../BaseUrl';\nimport axios from 'axios';\nimport './index.scss';\n\nconst VerifyAccount:FunctionComponent = () => {\n    const props: any = useParams()\n    const [status, setStatus] = useState('')\n    const [message, setMessage] = useState('')\n    const [showResend, setShowResend] = useState(false);\n\n    useEffect(() => {\n        if (props.userId?.length > 0 && props.token?.length > 0) {\n            axios.get(`${BASE_URL}/api/auth/verify`, { params: { userId: props.userId, token: props.token } })\n                .then(res => {\n                    const status = res.data.status;\n                    switch (status) {\n                        case 'success':\n                            setMessage('Your account has been verified!')\n                            break;\n                        case 'expired':\n                            setMessage('This verification link has expired.')\n                            setShowResend(true)\n                            break;\n                        default:\n                            break;\n                    }\n                    setStatus(status);\n                })\n                .catch(err => {\n                    console.error(err);\n                    setStatus('failed');\n                })\n        }\n    }, [props])\n\n    const handleResend = () => {\n        if (props.userId?.length > 0) {\n            axios.post(`${BASE_URL}/api/auth/resend-verification`, { userId: props.userId })\n                .then(res => {\n                    const email = res.data.email;\n                    setMessage(`Verification email has been sent to ${email}!`);\n                    setShowResend(false);\n                })\n                .catch(err => {\n                    console.error(err);\n                    setStatus('failed');\n                })\n        }\n    }\n    \n    return (\n        <div className=\"header-background screen-center\">\n            <div className=\"col-md-18\" style={{ textAlign: 'center', color: 'black' }}>\n                <h1 className=\"display-3\">\n                    {status === \"success\" && message}\n                    {status === \"expired\" && \n                    <>\n                        {message}\n                        <br/>\n                        {showResend && <a onClick={handleResend}>Click here to re-send verification email</a>}\n                    </>\n                    }\n                    {status === \"failed\" && <>Looks like something is wrong on our end. Please try again later.</>}\n                </h1>\n            </div>\n        </div>\n    )\n}\n\nexport default VerifyAccount\n\n\n","import React, { FunctionComponent } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Form, Input, Button, notification } from 'antd';\nimport { BASE_URL } from '../BaseUrl';\nimport axios from 'axios';\nimport './index.scss';\nimport 'antd/dist/antd.css';\n\ntype FormData = {\n    password: string;\n    retypePassword: string;\n}\n\nconst ResetPassword:FunctionComponent = () => {\n    const { userId, token }: any = useParams()\n\n    const layout = {\n        labelCol: { span: 10 },\n        wrapperCol: { span: 14 },\n    };\n\n    const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    };\n\n    const onFinish = (values: FormData) => {\n        //check errors\n        if (values.password !== values.retypePassword) {\n            notification.open({\n                message: 'Error',\n                description: 'Passwords must match',\n                type: 'error'\n            })\n            return;\n        }\n\n        axios.post(`${BASE_URL}/api/auth/reset-password`, { userId, token, password: values.password })\n            .then(() => {\n                notification.open({\n                    message: 'Success!',\n                    description: 'Successfully updated password! Try logging in again.',\n                    type: 'success'\n                })\n            })\n            .catch(err => {\n                notification.open({\n                    message: 'Error',\n                    description: 'Failed to update password',\n                    type: 'error'\n                })\n            })\n    }\n\n    return (\n        <div className=\"header-background screen-center\">\n            <Form\n                {...layout}\n                name=\"basic\"\n                onFinish={onFinish}\n            >                                               \n                <Form.Item\n                    label=\"Password\"\n                    name=\"password\"\n                    rules={[{ required: true, message: 'Please input your password!' }]}\n                >\n                    <Input.Password />\n                </Form.Item>\n                <Form.Item\n                    label=\"Retype Password\"\n                    name=\"retypePassword\"\n                    rules={[{ required: true, message: 'Please retype your password!' }]}\n                >\n                    <Input.Password />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n    )\n}\n\nexport default ResetPassword\n\n\n","import React from 'react';\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom';\nimport HomePage from './home/Index';\nimport VerifyAccount from './home/VerifyAccount';\nimport ResetPassword from './home/ResetPassword';\nimport './App.scss';\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={HomePage}/>\n\t\t\t\t</Switch>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/verify/:userId/:token\" component={VerifyAccount}/>\n\t\t\t\t</Switch>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/resetPassword/:userId/:token\" component={ResetPassword}/>\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n\n\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}